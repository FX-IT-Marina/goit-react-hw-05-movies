{"version":3,"file":"static/js/495.877b66dd.chunk.js","mappings":"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","sources":["components/TopMovies/TopMovies.styled.js","components/TopMovies/TopMovies.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst { Link } = require('react-router-dom');\n\nexport const MoviesLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  font-size: 18px;\n\n  &:hover {\n    color: #eac645;\n  }\n`;\n\nexport const MoviesName = styled.li`\n  margin-bottom: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MoviesLink, MoviesName } from './TopMovies.styled';\n\nconst TopMovies = ({ movies = [] }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <MoviesName key={id}>\n          <MoviesLink to={`movies/${id}`} state={{ from: location }}>\n            {title}\n          </MoviesLink>\n        </MoviesName>\n      ))}\n    </ul>\n  );\n};\n\nexport default TopMovies;\n","import styled from 'styled-components';\n\nexport const MainList = styled.main`\n  color: white;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  margin-left: 60px;\n`;\n","import { useEffect, useState } from 'react';\nimport API from 'services/API';\nimport TopMovies from 'components/TopMovies/TopMovies';\nimport { MainList } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrend = async () => {\n      try {\n        const trendMovies = await API.trand();\n        setMovies(trendMovies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTrend();\n  }, []);\n\n  return (\n    <MainList>\n      <h1>Trending today</h1>\n      <TopMovies movies={movies} />\n    </MainList>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// Записую параметри по дефолту\n\nclass fetchApi {\n  #URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '89c7dfceaf9e376cdb680a771d381668';\n  #TRAND = 'trending/movie/day';\n  #DETAILS = 'movie/';\n  #CREDITS = '/credits';\n  #REVIEWS = '/reviews';\n  #SEARCH = 'search/movie';\n\n  trand = async () => {\n    const response = await axios.get(\n      `${this.#URL}${this.#TRAND}?api_key=${this.#API_KEY}`\n    );\n    return response.data.results;\n  };\n\n  details = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}?api_key=${this.#API_KEY}`\n    );\n    return response.data;\n  };\n\n  credits = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}${this.#CREDITS}?api_key=${\n        this.#API_KEY\n      }`\n    );\n    return response.data.cast;\n  };\n\n  reviews = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}${this.#REVIEWS}?api_key=${\n        this.#API_KEY\n      }`\n    );\n\n    return response.data.results;\n  };\n\n  search = async movieName => {\n    const response = await axios.get(\n      `${this.#URL}${this.#SEARCH}?api_key=${this.#API_KEY}&query=${movieName}`\n    );\n\n    return response.data.results;\n  };\n}\n\nconst API = new fetchApi();\nexport default API;\n"],"names":["Link","require","MoviesLink","styled","_templateObject","_taggedTemplateLiteral","MoviesName","_templateObject2","_ref","_ref$movies","movies","location","useLocation","_jsx","children","map","_ref2","title","id","to","concat","state","from","MainList","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","fetchTrend","_asyncToGenerator","_regeneratorRuntime","mark","_callee","trendMovies","wrap","_context","prev","next","API","sent","t0","console","log","stop","apply","arguments","_jsxs","TopMovies","_URL","_classPrivateFieldLooseKey","_API_KEY","_TRAND","_DETAILS","_CREDITS","_REVIEWS","_SEARCH","fetchApi","_createClass","_this","_classCallCheck","Object","defineProperty","writable","value","trand","response","axios","_classPrivateFieldLooseBase","abrupt","data","results","details","_callee2","movieId","_context2","_x","credits","_ref3","_callee3","_context3","cast","_x2","reviews","_ref4","_callee4","_context4","_x3","search","_ref5","_callee5","movieName","_context5","_x4"],"sourceRoot":""}