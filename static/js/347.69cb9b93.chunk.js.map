{"version":3,"file":"static/js/347.69cb9b93.chunk.js","mappings":"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","sources":["pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.js","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nconst { Link } = require('react-router-dom');\n\nexport const Main = styled.main`\n  padding-top: 15px;\n  padding-bottom: 15px;\n  padding-left: 20px;\n  max-width: 100%;\n`;\n\nexport const NameTitle = styled.p`\n  color: white;\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nexport const Name = styled.p`\n  color: white;\n`;\n\nexport const OverviewTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  color: white;\n`;\n\nexport const GenresTitle = styled.h2`\n  font-size: 18px;\n  font-weight: 700;\n  color: white;\n`;\n\nexport const Information = styled.p`\n  color: white;\n  font-size: 20px;\n  font-weight: 800;\n`;\n\nexport const LinkInformation = styled(Link)`\n  font-size: 18px;\n  font-weight: 600;\n  color: white;\n  text-decoration: none;\n`;\n\nexport const LinkBack = styled(Link)`\n  font-size: 15px;\n  font-weight: 700;\n  color: white;\n  text-decoration: none;\n  border: 2px solid #eac645;\n  border-radius: 8px;\n  padding: 3px;\n  &:hover {\n    background-color: white;\n    color: black;\n  }\n`;\n\nexport const Wrapper = styled.img`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-top: 15px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 12px;\n  border-bottom: 1px solid white;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  gap: 12px;\n  padding: 0;\n`;\n\nexport const InformationList = styled.ul`\n  margin: 0;\n  padding-bottom: 20px;\n  border-bottom: 1px solid white;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport API from 'services/API';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useRef } from 'react';\nimport {\n  Main,\n  NameTitle,\n  Name,\n  OverviewTitle,\n  GenresTitle,\n  Information,\n  LinkInformation,\n  LinkBack,\n  Wrapper,\n  Container,\n  Genres,\n  InformationList,\n} from './MoviesDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('fetch');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const details = await API.details(movieId);\n        setDetails(details);\n        setStatus('finish');\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, overview, genres } = details;\n  const score = Math.trunc(vote_average * 10);\n  const img = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n\n  return (\n    status === 'finish' && (\n      <Main>\n        <Container>\n          <div>\n            <LinkBack to={backLinkLocationRef.current}>Go back</LinkBack>\n            <div>\n              <Wrapper src={img} width=\"160\" alt=\"\" />\n            </div>\n          </div>\n          <div>\n            <NameTitle>{title}</NameTitle>\n            <Name>User Score: {score}%</Name>\n            <OverviewTitle>Overview</OverviewTitle>\n            <Name>{overview}</Name>\n            <GenresTitle>Genres</GenresTitle>\n            <Genres>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </Genres>\n          </div>\n        </Container>\n        <Information>Additional information</Information>\n        <InformationList>\n          <li>\n            <LinkInformation to=\"cast\">Cast</LinkInformation>\n          </li>\n          <li>\n            <LinkInformation to=\"reviews\">Reviews</LinkInformation>\n          </li>\n        </InformationList>\n        <Suspense fallback={<div>Loading.....</div>}>\n          <Outlet />\n        </Suspense>\n      </Main>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\n// Записую параметри по дефолту\n\nclass fetchApi {\n  #URL = 'https://api.themoviedb.org/3/';\n  #API_KEY = '89c7dfceaf9e376cdb680a771d381668';\n  #TRAND = 'trending/movie/day';\n  #DETAILS = 'movie/';\n  #CREDITS = '/credits';\n  #REVIEWS = '/reviews';\n  #SEARCH = 'search/movie';\n\n  trand = async () => {\n    const response = await axios.get(\n      `${this.#URL}${this.#TRAND}?api_key=${this.#API_KEY}`\n    );\n    return response.data.results;\n  };\n\n  details = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}?api_key=${this.#API_KEY}`\n    );\n    return response.data;\n  };\n\n  credits = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}${this.#CREDITS}?api_key=${\n        this.#API_KEY\n      }`\n    );\n    return response.data.cast;\n  };\n\n  reviews = async movieId => {\n    const response = await axios.get(\n      `${this.#URL}${this.#DETAILS}${movieId}${this.#REVIEWS}?api_key=${\n        this.#API_KEY\n      }`\n    );\n\n    return response.data.results;\n  };\n\n  search = async movieName => {\n    const response = await axios.get(\n      `${this.#URL}${this.#SEARCH}?api_key=${this.#API_KEY}&query=${movieName}`\n    );\n\n    return response.data.results;\n  };\n}\n\nconst API = new fetchApi();\nexport default API;\n"],"names":["Link","require","Main","styled","_templateObject","_taggedTemplateLiteral","NameTitle","_templateObject2","Name","_templateObject3","OverviewTitle","_templateObject4","GenresTitle","_templateObject5","Information","_templateObject6","LinkInformation","_templateObject7","LinkBack","_templateObject8","Wrapper","_templateObject9","Container","_templateObject10","Genres","_templateObject11","InformationList","_templateObject12","_location$state$from","_location$state","location","useLocation","backLinkLocationRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","status","setStatus","movieId","useParams","useEffect","fetchDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_details","wrap","_context","prev","next","API","sent","t0","console","log","stop","apply","arguments","poster_path","title","vote_average","overview","genres","score","Math","trunc","img","concat","_jsxs","children","_jsx","to","current","src","width","alt","map","_ref2","id","name","Suspense","fallback","Outlet","_URL","_classPrivateFieldLooseKey","_API_KEY","_TRAND","_DETAILS","_CREDITS","_REVIEWS","_SEARCH","fetchApi","_createClass","_this","_classCallCheck","Object","defineProperty","writable","value","trand","response","axios","_classPrivateFieldLooseBase","abrupt","data","results","_callee2","_context2","_x","credits","_ref3","_callee3","_context3","cast","_x2","reviews","_ref4","_callee4","_context4","_x3","search","_ref5","_callee5","movieName","_context5","_x4"],"sourceRoot":""}